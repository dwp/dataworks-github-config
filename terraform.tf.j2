terraform {
  required_version = "0.12.19"

  backend "s3" {
    bucket         = "{{state_file_bucket}}"
    key            = "terraform/dataworks/github/dataworks-github-config.tfstate"
    region         = "{{state_file_region}}"
    encrypt        = true
    kms_key_id     = "arn:aws:kms:eu-west-1:{{state_file_account}}:key/{{state_file_kms_key}}"
    dynamodb_table = "remote_state_locks"
  }
}

locals {
  environment = terraform.workspace == "default" ? "management-dev" : terraform.workspace
  dockerhub_username = jsondecode(data.aws_secretsmanager_secret_version.dataworks.secret_binary)["dockerhub_username"]
  dockerhub_password = jsondecode(data.aws_secretsmanager_secret_version.dataworks_secret.secret_binary)["dockerhub_token"]
  snyk_token = jsondecode(data.aws_secretsmanager_secret_version.dataworks_secret.secret_binary)["snyk_token"]
  github_webhook_token = jsondecode(data.aws_secretsmanager_secret_version.dataworks.secret_binary)["concourse_github_webhook_token"]
  github_token = jsondecode(data.aws_secretsmanager_secret_version.dataworks_secret.secret_binary)["concourse_github_pat"]
  github_email = jsondecode(data.aws_secretsmanager_secret_version.dataworks.secret_binary)["concourse_github_email"]
  github_username = jsondecode(data.aws_secretsmanager_secret_version.dataworks.secret_binary)["concourse_github_username"]
  slack_webhook_url = jsondecode(data.aws_secretsmanager_secret_version.dataworks.secret_binary)["slack_webhook_url"]
  aws_mgmt_dev = jsondecode(data.aws_secretsmanager_secret_version.aws_account.secret_binary)["management-dev"]
  account = { {% for key, value in accounts.items() %}
      {{key}} = "{{value}}"{% endfor %}
    }
}


variable "assume_role" {
  default = "ci"
}

variable "region" {
  default = "eu-west-2"
}

provider "aws" {
  version = "~> 3.1"
  region  = var.region

  assume_role {
    role_arn = "arn:aws:iam::${lookup(local.account, local.environment)}:role/${var.assume_role}"
  }
}

data "aws_secretsmanager_secret" "aws_account" {
  name = "/concourse/dataworks/aws_account"
}
data "aws_secretsmanager_secret_version" "aws_account" {
  secret_id = data.aws_secretsmanager_secret.aws_account.id
}

data "aws_secretsmanager_secret" "dataworks" {
  name = "/concourse/dataworks/dataworks"
}
data "aws_secretsmanager_secret_version" "dataworks" {
  secret_id = data.aws_secretsmanager_secret.dataworks.id
}

data "aws_secretsmanager_secret" "dataworks_secret" {
  name = "/concourse/dataworks/dataworks-secrets"
}
data "aws_secretsmanager_secret_version" "dataworks_secret" {
  secret_id = data.aws_secretsmanager_secret.dataworks_secret.id
}
