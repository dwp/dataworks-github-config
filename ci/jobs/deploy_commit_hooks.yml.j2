jobs:
  - name: deploy-commit-hooks
    max_in_flight: 1
    plan:
      - in_parallel:
          - get: dataworks-github-config
            trigger: true
            passed:
              - master
          {% for repo in repos %}
          - get: {{ repo }}{% endfor %}
      - task: commit-and-push
        config:
          inputs:
            - name: dataworks-github-config
            {% for repo in repos %}
            - name: {{ repo }}{% endfor %}
          outputs:
            {% for repo in repos %}
            - name: {{ repo }}-modified{% endfor %}
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine/git
              tag: 1.0.7
          run:
            path: /bin/sh
            args:
              - -exc
              - |
                git config --global user.name "${GIT_USERNAME}"
                git config --global user.email "${GIT_EMAIL}"
                {% for repo in repos %}
                git clone {{ repo }} {{ repo }}-modified
                cd {{ repo }}-modified
                git remote set-url origin https://github.com/dwp/{{ repo }}.git
                sed -i -e '/.PHONY:\ git-hooks/,+12d' Makefile
                cat << 'EOF' >> Makefile

                .PHONY: git-hooks
                git-hooks: ## Set up hooks in .githooks
                    @if [[ ! -f .gitmodules ]]; then \
                        git rm -r .githooks ; \
                        git submodule add https://github.com/dwp/dataworks-githooks .githooks ; \
                        git submodule update --init .githooks ; \
                        git config core.hooksPath .githooks ; \
                    else \
                        git submodule update --remote .githooks ; \
                    fi \

                EOF
                cd ..{% endfor %}
        params:
          GIT_USERNAME: ((dataworks.concourse_github_username))
          GIT_EMAIL: ((dataworks.concourse_github_email))
      - in_parallel:
        {% for repo in repos %}
        - put: {{ repo }}
          params:
            repository: {{ repo }}-modified{% endfor %}