meta:
  plan:
    terraform-bootstrap:
      task: terraform-bootstrap
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: dwpdigital/jinja-yaml-aws
            version: 0.0.19
            tag: 0.0.19
        run:
          path: sh
          args:
            - -exc
            - |
              python bootstrap_terraform.py
              cp terraform.tf ../terraform-config
              cp terraform.tfvars ../terraform-config
          dir: dataworks-github-config
        inputs:
          - name: dataworks-github-config
        outputs:
          - name: terraform-config
      params:
        AWS_REGION: eu-west-2
        AWS_SECRETS_ROLE: arn:aws:iam::((aws_account.management)):role/ci
    terraform-apply:
      task: terraform-apply
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: hashicorp/terraform
            version: ((dataworks.terraform_13_version))
            tag: ((dataworks.terraform_13_version))
        run:
          path: sh
          args:
            - -exc
            - |
              cp ../terraform-config/* .
              terraform workspace show
              terraform init
              terraform plan -out terraform.plan
              terraform apply -auto-approve terraform.plan
          dir: dataworks-github-config
        inputs:
          - name: dataworks-github-config
          - name: terraform-config
      params:
        TF_CLI_ARGS_apply: -lock-timeout=300s
        TF_INPUT: "false"
        TF_VAR_github_token: ((dataworks-secrets.concourse_github_pat))
        TF_VAR_github_webhook_token: ((dataworks.concourse_github_webhook_token))
        TF_VAR_github_organization: dwp
        TF_VAR_dockerhub_username: ((dataworks.dockerhub_username))
        TF_VAR_dockerhub_password: ((dataworks-secrets.dockerhub_token))
        TF_VAR_snyk_token: ((dataworks-secrets.snyk_token))
        TF_VAR_github_username: ((dataworks.concourse_github_username))
        TF_VAR_github_email: ((dataworks.concourse_github_email))
        TF_VAR_slack_webhook_url: ((dataworks.slack_webhook_url))
        TF_VAR_terraform_13_version: ((dataworks.terraform_13_version))
        TF_VAR_terraform_13_version: ((dataworks.terraform_13_version))
        GIT_USERNAME: ((dataworks.concourse_github_username))
        GIT_EMAIL: ((dataworks.concourse_github_email))
    terraform-plan:
      task: terraform-plan
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: hashicorp/terraform
            version: ((dataworks.terraform_13_version))
            tag: ((dataworks.terraform_13_version))
        run:
          path: sh
          args:
            - -exc
            - |
              cp ../terraform-config/* .
              terraform workspace show
              terraform init
              terraform plan -detailed-exitcode
          dir: dataworks-github-config
        inputs:
          - name: dataworks-github-config
          - name: terraform-config
      params:
        TF_CLI_ARGS_plan: -lock-timeout=300s
        TF_INPUT: "false"
        TF_VAR_github_token: ((dataworks-secrets.concourse_github_pat))
        TF_VAR_github_webhook_token: ((dataworks.concourse_github_webhook_token))
        TF_VAR_github_organization: dwp
        TF_VAR_dockerhub_username: ((dataworks.dockerhub_username))
        TF_VAR_dockerhub_password: ((dataworks-secrets.dockerhub_token))
        TF_VAR_snyk_token: ((dataworks-secrets.snyk_token))
        TF_VAR_slack_webhook_url: ((dataworks.slack_webhook_url))
        TF_VAR_github_username: ((dataworks.concourse_github_username))
        TF_VAR_github_email: ((dataworks.concourse_github_email))
        TF_VAR_terraform_13_version: ((dataworks.terraform_13_version))
        TF_VAR_terraform_13_version: ((dataworks.terraform_13_version))
